import { NextRequest, NextResponse } from "next/server";
import Account from "@/models/Account";
import bcrypt from "bcryptjs";
import crypto from "crypto";
import sendEmail from "@/utils/sendEmail";

export async function POST(req: NextRequest) {
  const {
    firstName,
    lastName,
    email,
    password,
    phoneNumber,
    country,
    deliveryAddress,
  } = await req.json();

  if (!firstName || !lastName || !email || !password) {
    return NextResponse.json({ error: "Missing required fields" }, { status: 400 });
  }

  // Check if email already exists
  const existing = await Account.findOne({ email });
  if (existing) {
    return NextResponse.json({ error: "Email already registered" }, { status: 400 });
  }

  const hashedPassword = await bcrypt.hash(password, 10);

  // Generate activation token
  const activationToken = crypto.randomBytes(32).toString("hex");
  const activationTokenExpires = Date.now() + 1000 * 60 * 60 * 24;

  // Create account with isActive: false
  const account = await Account.create({
    firstName,
    lastName,
    email,
    password: hashedPassword,
    phoneNumber,
    country,
    deliveryAddress,
    isActive: false,
    activationToken,
    activationTokenExpires
  });

  // Send activation email
  const activationUrl = `${process.env.NEXT_PUBLIC_BASE_URL}/account/activate?token=${activationToken}`;
  await sendEmail(
    email,
    "’Ä’°’Ω’ø’°’ø’•÷Ñ ’Å’•÷Ä ’∞’°’∑’´’æ’®, Activate your account, –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç",
    `
    <p>‘≤’°÷Ä÷á, ${firstName}</p>
<p>’á’∂’∏÷Ä’∞’°’Ø’°’¨ ’•’∂÷Ñ, ’∏÷Ä ’£÷Ä’°’∂÷Å’æ’•’¨ ’•÷Ñ Shokoladaran-’∏÷Ç’¥÷â ’Å’•÷Ä ’∞’°’∑’´’æ’® ’°’Ø’ø’´’æ’°÷Å’∂’•’¨’∏÷Ç ’∞’°’¥’°÷Ä, ’≠’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’Ω’•’≤’¥’•’¨ ’Ω’ø’∏÷Ä÷á ’£’ø’∂’æ’∏’≤ ’Ø’∏’≥’°’Ø’® ’Ø’°’¥ ’¢’°÷Å’•’¨ ’∞’≤’∏÷Ç’¥’® ’§’´’ø’°÷Ä’Ø’´’π’∏÷Ç’¥÷â</p>
<p>Hello, ${firstName}</p>
<p>Thank you for signing up to Shokoladaran. To activate your account, please click the button below or open the link in your browser.</p>
<p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${firstName}</p>
<p>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ Shokoladaran. –ß—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ.</p>
<p>üîó ’Ä’°’Ω’ø’°’ø’¥’°’∂ ’∞’≤’∏÷Ç’¥ / Verification link / –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: </p>
<p>${activationUrl}</p>
<p>’á’∂’∏÷Ä’∞’°’Ø’°’¨’∏÷Ç’©’µ’∏÷Ç’∂ / Thank you / –°–ø–∞—Å–∏–±–æ
Shokoladaran ’©’´’¥ / The Shokoladaran Team / –ö–æ–º–∞–Ω–¥–∞ Shokoladaran
</p>
`
  );

  return NextResponse.json({ success: true, message: "Registration successful. Please check your email to activate your account." });
}